**********************Col Sum*******************************

Input
1 2 3
4 5 6
7 8 9
Output
Sum of Column 0: 12
Sum of Column 1: 15
Sum of Column 2: 18



import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++)
        {
            int sum=0;
            for(int j=0;j<col;j++)
            {
                sum+=arr[j][i];
            }
            System.out.println("Sum of Column "+i+": "+sum);
        }
    }
}




*******************Row Sum********************************
Input
1 2 3
4 5 6
7 8 9
Output
Sum of Row 0: 6
Sum of Row 1: 15
Sum of Row 2: 24


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++)
        {
            int sum=0;
            for(int j=0;j<col;j++)
            {
                sum+=arr[i][j];
            }
            System.out.println("Sum of Row "+i+": "+sum);
        }
    }
}




Matrix Multiplication
**************Main Diagonal Sum********************
Input
1 2 3
4 5 6
7 8 9
Output
15


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        int sum=0;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(i==j)
                sum+=arr[i][j];
            }
        }
        System.out.println(sum);
    }
}



*******************Minor Diagonal Sum**********************
Input
1 2 3
4 5 6
7 8 9
Output
15


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        int sum=0;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(i+j==row-1)
                sum+=arr[i][j];
            }
        }
        System.out.println(sum);
    }
}



*****************Transpose/Symmetric Of The Matrix*****************
Input
1 2 3
4 5 6
7 8 9
Output
1 4 7
2 5 8
3 6 9


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                System.out.print(arr[j][i]+" ");
            }
        }
    }
}



**************Row To Column Zero********************
Input
1 2 3
4 5 6
7 8 9
Output
1 0 3
0 0 0
7 0 9



import java.util.Scanner;

public class TwoDArray {
public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                if(i==row/2||j==col/2)
                System.out.print("0 ");
                else
                System.out.print(arr[j][i]+" ");
            }
        }
    }
}


**********************Wave Traversal****************************
Input
1 2 3
4 5 6
7 8 9
Output
1 4 7 8 5 2 3 6 9

import java.util.Scanner;

public class TwoDArray {
    static void SumOfCol(int[][] arr)
    {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++)
        {
            if(i%2==0)
            {
                for(int j=0;j<col;j++)
                {
                    System.out.print(arr[j][i]+" ");
                }
            }
            else
            {
                for(int j=col-1;j>=0;j--)
                {
                    System.out.print(arr[j][i]+" ");
                }
            }
        }
    }
}

************************Spiral Traversal***********************
Input
1 2 3
4 5 6
7 8 9
Output
1 2 3 6 9 8 7 4 5


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        int top=0,bottom=row-1,left=0,right=col-1;
        while(top<=bottom&&left<=right)
        {
            for(int i=left;i<=right;i++)
            {
                System.out.print(arr[top][i]+" ");
            }
            top++;
            for(int i=top;i<=bottom;i++)
            {
                System.out.print(arr[i][right]+" ");
            }
            right--;
            for(int i=right;i>=left;i--)
            {
                System.out.print(arr[bottom][i]+" ");
            }
            bottom--;
            for(int i=bottom;i>=top;i--)
            {
                System.out.print(arr[i][left]+" ");
            }
            left++;
        }
    }
}


*********************Print Upper Bound Elements********************
Input
1 2 3
4 5 6
7 8 9
Output
1 2 3 5 6 9


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++)
        {
            for(int j=i;j<col;j++)
            {
                System.out.print(arr[i][j]+" ");
            }
        }
    }
}
************************Print Lower Bound Elements*******************
Input
1 2 3
4 5 6
7 8 9
Output
1 4 5 7 8 9

import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<=i;j++)
            {
                System.out.print(arr[i][j]+" ");
            }
        }
    }
}
******************Matrix Addition*********************
Input
M1
1 2
3 4
M2
5 6 
7 8

Output
6 8 
10 12


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int[][] arr2=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr2[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                System.out.print((arr[i][j]+arr2[i][j])+" ");
            }
        }
    }
}

*****************Matrix Subtraction*********************
Input
8  6  
5  9  

3  2  
1  4

Output
5 4
4 5

import java.util.Scanner;

public class TwoDArray {
public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int[][] arr2=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr2[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                System.out.print((arr[i][j]-arr2[i][j])+" ");
            }
        }
    }
}

********Diagonal Matrix
A diagonal matrix is a square matrix where all elements outside the main diagonal are zero.
Input
1  2  3  
4  5  6  
7  8  9  

Output
1  0  0  
0  5  0  
0  0  9  

import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                if(i==j)
                    System.out.print(arr[i][j]+" ");
                else
                    System.out.print("0 ");
            }
        }
    }
}

********Lower Triangular Matrix

A lower triangular matrix is a square matrix where all elements above the main diagonal are zero.

Input

1  0  0  
4  5  0  
7  8  9  
Output
The given matrix is a lower triangular matrix.


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        int flag=0;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                if(j>i&&arr[i][j]!=0)
                    flag=1;
            }
        }
        if(flag==0)
            System.out.println("The given matrix is a lower triangular matrix.");
        else
            System.out.println("The given matrix is not a lower triangular matrix.");
    }
}

*******Upper Triangular Matrix
An upper triangular matrix is a square matrix where all elements below the main diagonal are zero.

Input
1  2  3  
4  5  6  
7  8  9  
Output
1  2  3  
0  5  6  
0  0  9  

import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                if(j>=i)
                    System.out.print(arr[i][j]+" ");
                else
                    System.out.print("0 ");
            }
        }
    }
}
******Tridiagonal matrix
 Non-zero elements are on the main diagonal and its adjacent diagonals.
INput
1  2  0  0  
3  4  5  0  
0  6  7  8  
0  0  9  10 
Output
The given matrix is a tridiagonal matrix.

Input
1  2  3  0  
4  5  6  7  
0  8  9  10  
0  0  11  12  
Output
The given matrix is NOT a tridiagonal matrix.


import java.util.Scanner;

public class TwoDArray {
    public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int row=arr.length;
        int col=arr[0].length;
        int flag=0;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                if((!((i==j)||(i-1==j)||(j-1==i))&&arr[i][j]!=0)||(((i==j)||(i-1==j)||(j-1==i))&&arr[i][j]==0))
                    flag=1;
            }
        }
        if(flag==0)
            System.out.println("The given matrix is a tridiagonal matrix.");
        else
            System.out.println("The given matrix is NOT a tridiagonal matrix.");
    }
}



************Square band matrix
A Square Band Matrix is a special type of square matrix where all nonzero elements are confined within a diagonal band that extends along the main diagonal. Elements outside this band are always zero.

The width of the band is determined by a parameter called the bandwidth (k). The bandwidth defines how many diagonals above and below the main diagonal contain nonzero values.

Input
1  2  0  0  
3  4  5  0  
0  6  7  8  
0  0  9  10  
Output
The given matrix is a square band matrix.

Input
1  2  3  0  
4  5  6  7  
0  8  9  10  
0  0  11  12  
Output
The given matrix is NOT a square band matrix.

Input
1  2  3  0  0  
4  5  6  7  0  
8  9  10 11 12  
0 13 14 15 16  
0  0 17 18 19  
Output
The given matrix is a square band matrix.


import java.util.Scanner;

public class TwoDArray {
 public static void main(String[] args)
    {
        Scanner in=new Scanner(System.in);
        int limit=in.nextInt();
        int[][] arr=new int[limit][limit];
        for(int i=0;i<limit;i++)
        {
            for(int j=0;j<limit;j++)
            {
                arr[i][j]=in.nextInt();
            }
        }
        int k=in.nextInt();
        int row=arr.length;
        int col=arr[0].length;
        int flag=0;
        for(int i=0;i<row;i++,System.out.println())
        {
            for(int j=0;j<col;j++)
            {
                if(((Math.abs(i-j)<k)&&arr[i][j]==0)||((Math.abs(i-j)>=k)&&arr[i][j]!=0))
                    flag=1;
            }
        }
        if(flag==0)
            System.out.println("The given matrix is a square band matrix.");
        else
            System.out.println("The given matrix is NOT a square band matrix.");
    }
}
